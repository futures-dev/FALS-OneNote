/* Auto-generated file */

import { Period, Type } from "Service/Fals/TypeMap";
// var dictProto: any = <any>{};
// dictProto.__proto__.putIfAbsent = function(child, node) {
//   this[child] = this[child] || node;
// };
import { Serialize } from "../Serialization/Serialize";
import { Key } from "../Bank/Key";
import { Answer } from "../Bank/Answer";
import { AssignmentStep } from "./AssignmentStep";
export class OpenTestStep extends AssignmentStep {
  static __static_initialized: boolean = false;
  static __static_initialize() {
    if (!OpenTestStep.__static_initialized) {
      OpenTestStep.__static_initialized = true;
      OpenTestStep.__static_initializer_0();
    }
  }

  public correctAnswer: Key;

  static __static_initializer_0() {
    Serialize.declare(
      /* getName */ (c => (c["__class"] ? c["__class"] : c["name"]))(
        OpenTestStep
      ),
      OpenTestStep
    );
  }

  public constructor() {
    super();
    this.correctAnswer = null;
    this.resultType = String.toString();
  }

  /**
   *
   * @param {string} answer    answer
   * @return {boolean}
   */
  public isAnswerValid(answer: string): boolean {
    return /* equals */ <any>((o1: any, o2: any) => {
      if (o1 && o1.equals) {
        return o1.equals(o2);
      } else {
        return o1 === o2;
      }
    })(this.correctAnswer.value, answer);
  }
}
OpenTestStep["__class"] = "Entities.OpenTestStep";

OpenTestStep.__static_initialize();
